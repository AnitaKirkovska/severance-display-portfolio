@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  body {
    @apply bg-cyber-black text-cyber-blue font-mono overflow-hidden;
  }
}

@layer components {
  .cyber-grid {
    @apply fixed inset-0 flex flex-col items-center justify-center opacity-70 pointer-events-auto select-none gap-1 md:gap-2 lg:gap-3;
  }
  
  .cyber-button {
    @apply relative px-2 md:px-4 lg:px-6 py-2 md:py-3 bg-transparent border border-cyber-blue text-cyber-blue 
           hover:bg-cyber-blue/10 transition-all duration-300 overflow-hidden text-xs md:text-sm whitespace-nowrap;
  }

  .cyber-button.unlocked {
    @apply bg-cyber-blue/20;
  }

  .cyber-button.locked {
    @apply opacity-50 cursor-not-allowed border-cyber-blue/50 text-cyber-blue/50;
  }

  .cyber-button.animating-box {
    animation: openBox 1s forwards;
    border-top-color: transparent;
  }

  .cyber-button.animating-box::before,
  .cyber-button.animating-box::after {
    content: '';
    @apply absolute top-0 h-[1px] bg-cyber-blue;
    width: 150%;
  }

  .cyber-button.animating-box::before {
    right: 50%;
    transform-origin: right;
    animation: splitBorderLeft 1s forwards;
  }

  .cyber-button.animating-box::after {
    left: 50%;
    transform-origin: left;
    animation: splitBorderRight 1s forwards;
  }

  .progress-bar {
    @apply h-6 w-full overflow-hidden mt-1 relative border border-cyber-blue bg-transparent;
  }

  .progress-bar-fill {
    @apply h-full bg-cyber-blue;
    transition: width 600ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  .progress-text {
    @apply absolute inset-0 flex items-center justify-center text-xs text-white font-bold z-10;
  }

  .scan-line {
    @apply fixed top-0 left-0 right-0 h-[2px] bg-cyber-blue/20 pointer-events-none;
  }

  .floating-letters {
    @apply fixed text-cyber-blue text-base md:text-xl pointer-events-none;
    animation: floatToBox 1s forwards;
  }

  .grid-cell {
    @apply text-xs sm:text-sm md:text-base lg:text-lg w-3 h-3 sm:w-5 sm:h-5 md:w-6 md:h-6 lg:w-7 lg:h-7 
           flex items-center justify-center transition-all duration-300 ease-in-out transform;
  }

  .grid-cell.float-horizontal {
    animation: floatLeftRight 10s cubic-bezier(0.45, 0, 0.55, 1) infinite;
  }

  .grid-cell.float-vertical {
    animation: floatUpDown 8s cubic-bezier(0.45, 0, 0.55, 1) infinite;
  }

  .grid-cell-hover {
    @apply scale-150 text-white brightness-150;
  }

  .grid-cell-neighbor-1 {
    @apply scale-135 text-white brightness-125;
  }

  .grid-cell-neighbor-2 {
    @apply scale-125 text-white brightness-110;
  }

  .grid-cell-neighbor-3 {
    @apply scale-115 text-white brightness-105;
  }

  @media (min-width: 768px) {
    .grid-cell.float-horizontal {
      animation: floatLeftRightDesktop 20s cubic-bezier(0.45, 0, 0.55, 1) infinite;
    }

    .grid-cell.float-vertical {
      animation: floatUpDownDesktop 15s cubic-bezier(0.45, 0, 0.55, 1) infinite;
    }
  }
}

@keyframes openBox {
  0% {
    transform: perspective(800px) rotateX(0);
  }
  50% {
    transform: perspective(800px) rotateX(30deg);
  }
  100% {
    transform: perspective(800px) rotateX(0);
  }
}

@keyframes splitBorderLeft {
  0% {
    transform: translateY(0) rotate(0);
  }
  50% {
    transform: translateY(-30px) rotate(-25deg);
  }
  100% {
    transform: translateY(0) rotate(0);
  }
}

@keyframes splitBorderRight {
  0% {
    transform: translateY(0) rotate(0);
  }
  50% {
    transform: translateY(-30px) rotate(25deg);
  }
  100% {
    transform: translateY(0) rotate(0);
  }
}

@keyframes floatToBox {
  0% {
    opacity: 1;
    transform: translate(var(--start-x), var(--start-y));
  }
  65% {
    opacity: 1;
    transform: translate(var(--end-x), var(--end-y));
  }
  100% {
    opacity: 0;
    transform: translate(var(--end-x), calc(var(--end-y) + 20px));
  }
}

@keyframes floatLeftRight {
  0% {
    transform: translateX(0) rotate(0deg);
  }
  25% {
    transform: translateX(2px) rotate(0.5deg);
  }
  75% {
    transform: translateX(-2px) rotate(-0.5deg);
  }
  100% {
    transform: translateX(0) rotate(0deg);
  }
}

@keyframes floatUpDown {
  0% {
    transform: translateY(0) scale(1);
  }
  50% {
    transform: translateY(-2px) scale(1.02);
  }
  100% {
    transform: translateY(0) scale(1);
  }
}

@keyframes floatLeftRightDesktop {
  0% {
    transform: translateX(0) rotate(0deg);
  }
  25% {
    transform: translateX(12px) rotate(3deg);
  }
  75% {
    transform: translateX(-12px) rotate(-3deg);
  }
  100% {
    transform: translateX(0) rotate(0deg);
  }
}

@keyframes floatUpDownDesktop {
  0% {
    transform: translateY(0) scale(1) rotate(0deg);
  }
  33% {
    transform: translateY(-8px) scale(1.1) rotate(2deg);
  }
  66% {
    transform: translateY(4px) scale(0.95) rotate(-2deg);
  }
  100% {
    transform: translateY(0) scale(1) rotate(0deg);
  }
}

@keyframes glow {
  0%, 100% { 
    text-shadow: 0 0 4px #00F0FF;
  }
  50% { 
    text-shadow: 0 0 8px #00F0FF;
  }
}

@keyframes fadeIn {
  0% { 
    opacity: 0;
  }
  100% { 
    opacity: 1;
  }
}

@keyframes scanline {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(100vh);
  }
}
