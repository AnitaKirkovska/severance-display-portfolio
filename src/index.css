
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  body {
    @apply bg-cyber-black text-cyber-blue font-mono overflow-hidden;
  }
}

@layer components {
  .cyber-grid {
    @apply fixed inset-0 flex flex-col items-center justify-center opacity-70 pointer-events-auto select-none gap-2;
  }
  
  .cyber-grid span {
    @apply w-8 h-8 flex items-center justify-center text-xl transition-colors duration-200;
  }
  
  .cyber-button {
    @apply relative px-8 py-3 bg-transparent border border-cyber-blue text-cyber-blue 
           hover:bg-cyber-blue/10 transition-all duration-300 overflow-hidden;
  }

  .cyber-button.unlocked {
    @apply bg-cyber-blue/20;
  }

  .cyber-button.animating-box {
    animation: openBox 1s forwards;
    border-top-color: transparent;
  }

  .cyber-button.animating-box::before,
  .cyber-button.animating-box::after {
    content: '';
    @apply absolute top-0 h-[1px] bg-cyber-blue;
    width: 150%; /* Increased from 50% to 150% */
  }

  .cyber-button.animating-box::before {
    right: 50%;
    transform-origin: right;
  }

  .cyber-button.animating-box::after {
    left: 50%;
    transform-origin: left;
  }

  .cyber-button.animating-box::before {
    animation: splitBorderLeft 1s forwards;
  }

  .cyber-button.animating-box::after {
    animation: splitBorderRight 1s forwards;
  }

  .progress-bar {
    @apply h-1 w-full bg-cyber-gray overflow-hidden;
  }

  .progress-bar-fill {
    @apply h-full bg-cyber-blue transition-all duration-1000 ease-out;
  }

  .scan-line {
    @apply fixed top-0 left-0 right-0 h-[2px] bg-cyber-blue/20 pointer-events-none;
  }

  .floating-letters {
    @apply fixed text-cyber-blue text-xl pointer-events-none;
    animation: floatToBox 1s forwards;
  }
}

@keyframes openBox {
  0% {
    transform: perspective(800px) rotateX(0);
  }
  100% {
    transform: perspective(800px) rotateX(30deg);
  }
}

@keyframes splitBorderLeft {
  0% {
    transform: translateY(0) rotate(0);
  }
  50% {
    transform: translateY(-30px) rotate(-25deg); /* Adjusted angle and distance */
  }
  100% {
    transform: translateY(0) rotate(0);
  }
}

@keyframes splitBorderRight {
  0% {
    transform: translateY(0) rotate(0);
  }
  50% {
    transform: translateY(-30px) rotate(25deg); /* Adjusted angle and distance */
  }
  100% {
    transform: translateY(0) rotate(0);
  }
}

@keyframes floatToBox {
  0% {
    opacity: 1;
    transform: translate(var(--start-x), var(--start-y));
  }
  75% {
    opacity: 1;
    transform: translate(var(--end-x), var(--end-y));
  }
  100% {
    opacity: 0;
    transform: translate(var(--end-x), calc(var(--end-y) + 20px));
  }
}

@keyframes glow {
  0%, 100% { 
    text-shadow: 0 0 4px #00F0FF;
  }
  50% { 
    text-shadow: 0 0 8px #00F0FF;
  }
}

@keyframes fadeIn {
  0% { 
    opacity: 0;
  }
  100% { 
    opacity: 1;
  }
}

@keyframes scanline {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(100vh);
  }
}

